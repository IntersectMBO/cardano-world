#!/bin/sh -u

cwd=$(dirname "$0")

# shellcheck source=/dev/null
. "${cwd}/../core/common"

# shellcheck disable=SC2154
banner "${testname}"

OUTPUT_DIR="${TEST}"

rm -rf "${OUTPUT_DIR}"
mkdir "${OUTPUT_DIR}"

DATA_DIR="test/cli/${testname}/data/"
if test -d cardano-cli ; then
  DATA_DIR="cardano-cli/${DATA_DIR}"
  fi

# This file gets updated so copy it from the data directory to the output and
# modify it there.
cp "${DATA_DIR}/delegate-op-cert.counter" "${OUTPUT_DIR}/"

error=0

# We could generate the required keys here, but then if the ket generation fails this
# test would also fail which is misleading.
# However, the keys can be generated eg:
#    cabal run cardano-cli:cardano-cli -- shelley node key-gen-KES \
#        --verification-key-file cardano-cli/test/cli/node-issue-op-cert/data/node-kes.vkey \
#        --signing-key-file /dev/null

${CARDANO_CLI} shelley node issue-op-cert \
    --hot-kes-verification-key-file "${DATA_DIR}/node-kes.vkey" \
    --cold-signing-key-file "${DATA_DIR}/delegate.skey" \
    --operational-certificate-issue-counter "${OUTPUT_DIR}/delegate-op-cert.counter" \
    --kes-period 0 \
    --out-file "${OUTPUT_DIR}/operational.cert"

assert_file_exists "${OUTPUT_DIR}/operational.cert"

assert_string 'Node operational certificate' "${OUTPUT_DIR}/operational.cert"

assert_string 'Next certificate issue number: 7' "${OUTPUT_DIR}/delegate-op-cert.counter"

report_result ${error}
